// Code generated by protoc-gen-go-http. DO NOT EDIT.

package v1

import (
	context "context"
	"fmt"
	http1 "github.com/go-kratos/kratos/v2/transport/http"
	binding "github.com/go-kratos/kratos/v2/transport/http/binding"
	mux "github.com/gorilla/mux"
	common "github.com/tuya/tuya-cloud-sdk-go/api/common"
	http "net/http"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
var _ = new(http.Request)
var _ = new(context.Context)
var _ = binding.MapProto
var _ = mux.NewRouter

const _ = http1.SupportPackageIsVersion1

func TestGetTokenAPI(h http1.HandleOptions) error {
	tests := []struct {
		name    string
		want    *common.GetTokenAPIResponse
		wantErr bool
	}{
		{
			name: "1",
		},
	}
	for _, tt := range tests {
		got, err := common.GetTokenAPI()
		if (err != nil) != tt.wantErr {
			fmt.Errorf("GetTokenAPI() error = %v, wantErr %v", err, tt.wantErr)
			return err
		}

		if got != nil && !got.Success {
			fmt.Println(got.Msg)
			return err
		}
		fmt.Println(got)
		return nil
	}
	return nil
}