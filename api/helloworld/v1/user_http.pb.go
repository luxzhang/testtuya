// Code generated by protoc-gen-go-http. DO NOT EDIT.

package v1

import (
	context "context"
	"fmt"
	http1 "github.com/go-kratos/kratos/v2/transport/http"
	binding "github.com/go-kratos/kratos/v2/transport/http/binding"
	mux "github.com/gorilla/mux"
	http "net/http"
	"testtuya/internal/data"
	"log"
	"strconv"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
var _ = new(http.Request)
var _ = new(context.Context)
var _ = binding.MapProto
var _ = mux.NewRouter

const _ = http1.SupportPackageIsVersion1

func initUserApi(r *mux.Router) {
	s := r.PathPrefix("/user").Subrouter()
	s.HandleFunc("/list", UserListHandler)
	s.HandleFunc("/query", queryHandler).Methods("GET")
}

func queryHandler(w http.ResponseWriter, r *http.Request) {
	id, err := strconv.Atoi(r.URL.Query().Get("id"))
	if err != nil {
		fmt.Printf("GetUser param err(%v)", err)
		return
	}

	var u = new(data.User)
	user, err:= u.GetUser(id)
	if err != nil {
		fmt.Printf("GetUser error(%v)", err)
		return
	}

	log.Println("GetUser complete", user)
	fmt.Fprintln(w, user)
}

func UserListHandler(w http.ResponseWriter, r *http.Request) {
	w.Write([]byte("user list"))
}